/*!*******************************************************************************************************************************************************************************************************************************!*\
  !*** css ../node_modules/css-loader/dist/cjs.js!../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[3]!./sass/base/gutenberg-blocks.scss ***!
  \*******************************************************************************************************************************************************************************************************************************/
/* stylelint-disable max-nesting-depth */
/* stylelint-enable max-nesting-depth */
/* stylelint-disable order/order */
:root {
  --color-primary: hsl(189, 89%, 40%);
  --color-primary-h: 189;
  --color-primary-s: 89%;
  --color-primary-l: 40%;
  --color-primary-high: hsl(189, 89%, 35%);
  --color-primary-high-h: 189;
  --color-primary-high-s: 89%;
  --color-primary-high-l: 35%;
  --color-primary-higher: hsl(189, 89%, 30%);
  --color-primary-higher-h: 189;
  --color-primary-higher-s: 89%;
  --color-primary-higher-l: 30%;
  --color-primary-low: hsl(189, 89%, 50%);
  --color-primary-low-h: 189;
  --color-primary-low-s: 89%;
  --color-primary-low-l: 50%;
  --color-primary-lower: hsl(189, 89%, 92%);
  --color-primary-lower-h: 189;
  --color-primary-lower-s: 89%;
  --color-primary-lower-l: 92%;
  --color-secondary: hsl(48, 100%, 50%);
  --color-secondary-h: 48;
  --color-secondary-s: 100%;
  --color-secondary-l: 50%;
  --color-secondary-low: hsl(48, 100%, 65%);
  --color-secondary-low-h: 48;
  --color-secondary-low-s: 100%;
  --color-secondary-low-l: 65%;
  --color-secondary-high: hsl(48, 100%, 40%);
  --color-secondary-high-h: 48;
  --color-secondary-high-s: 100%;
  --color-secondary-high-l: 40%;
  --color-decorator: hsl(317, 96%, 50%);
  --color-decorator-h: 317;
  --color-decorator-s: 96%;
  --color-decorator-l: 50%;
  --color-decorator-high: hsl(317, 96%, 35%);
  --color-decorator-high-h: 317;
  --color-decorator-high-s: 96%;
  --color-decorator-high-l: 35%;
  --color-decorator-low: hsl(317, 96%, 75%);
  --color-decorator-low-h: 317;
  --color-decorator-low-s: 96%;
  --color-decorator-low-l: 75%;
  --color-white: hsl(0, 0%, 98%);
  --color-white-h: 0;
  --color-white-s: 0%;
  --color-white-l: 98%;
  --color-grey: hsl(0, 0%, 50%);
  --color-grey-h: 0;
  --color-grey-s: 0%;
  --color-grey-l: 50%;
  --color-grey-low: hsl(0, 0%, 75%);
  --color-grey-low-h: 0;
  --color-grey-low-s: 0%;
  --color-grey-low-l: 75%;
  --color-grey-lower: hsl(0, 0%, 95%);
  --color-grey-lower-h: 0;
  --color-grey-lower-s: 0%;
  --color-grey-lower-l: 95%;
  --color-grey-high: hsl(0, 0%, 40%);
  --color-grey-high-h: 0;
  --color-grey-high-s: 0%;
  --color-grey-high-l: 40%;
  --color-black: hsl(0, 0%, 24%);
  --color-black-h: 0;
  --color-black-s: 0%;
  --color-black-l: 24%;
  --color-dark: hsl(265, 100%, 6%);
  --color-dark-h: 265;
  --color-dark-s: 100%;
  --color-dark-l: 6%;
  --color-info: hsl(205, 100%, 45%);
  --color-info-h: 205;
  --color-info-s: 100%;
  --color-info-l: 45%;
  --color-info-low: hsl(205, 100%, 80%);
  --color-info-low-h: 205;
  --color-info-low-s: 100%;
  --color-info-low-l: 80%;
  --color-info-lower: hsl(205, 100%, 95%);
  --color-info-lower-h: 205;
  --color-info-lower-s: 100%;
  --color-info-lower-l: 95%;
  --color-info-high: hsl(205, 100%, 33%);
  --color-info-high-h: 205;
  --color-info-high-s: 100%;
  --color-info-high-l: 33%;
  --color-error: hsl(11, 78%, 50%);
  --color-error-h: 11;
  --color-error-s: 78%;
  --color-error-l: 50%;
  --color-error-low: hsl(11, 78%, 70%);
  --color-error-low-h: 11;
  --color-error-low-s: 78%;
  --color-error-low-l: 70%;
  --color-error-lower: hsl(11, 78%, 90%);
  --color-error-lower-h: 11;
  --color-error-lower-s: 78%;
  --color-error-lower-l: 90%;
  --color-error-high: hsl(11, 78%, 40%);
  --color-error-high-h: 11;
  --color-error-high-s: 78%;
  --color-error-high-l: 40%;
  --color-success: hsl(121, 90%, 35%);
  --color-success-h: 121;
  --color-success-s: 90%;
  --color-success-l: 35%;
  --color-success-low: hsl(121, 90%, 70%);
  --color-success-low-h: 121;
  --color-success-low-s: 90%;
  --color-success-low-l: 70%;
  --color-success-lower: hsl(121, 90%, 95%);
  --color-success-lower-h: 121;
  --color-success-lower-s: 90%;
  --color-success-lower-l: 95%;
  --color-success-high: hsl(121, 90%, 25%);
  --color-success-high-h: 121;
  --color-success-high-s: 90%;
  --color-success-high-l: 25%;
  --color-warning: hsl(40, 100%, 50%);
  --color-warning-h: 40;
  --color-warning-s: 100%;
  --color-warning-l: 50%;
  --color-warning-low: hsl(40, 100%, 65%);
  --color-warning-low-h: 40;
  --color-warning-low-s: 100%;
  --color-warning-low-l: 65%;
  --color-warning-lower: hsl(40, 100%, 95%);
  --color-warning-lower-h: 40;
  --color-warning-lower-s: 100%;
  --color-warning-lower-l: 95%;
  --color-warning-high: hsl(40, 100%, 40%);
  --color-warning-high-h: 40;
  --color-warning-high-s: 100%;
  --color-warning-high-l: 40%;
  --font-family: arial, sans-serif;
  --background-body: var(--color-white);
  --color-text: var(--color-black);
  --color-link: var(--color-primary);
  --color-button: var(--color-primary);
  --line-height-body: 1.4;
  --line-height-heading: 1.2;
  --line-height-button: 1.4;
  --border-size: 2px;
  --border-color: var(--color-grey-low);
  --border-radius: 4px;
  --border-button: 0.2em;
  --box-shadow: 2px 2px 4px 0 hsl(0deg 0% 50%);
  --z-back: -10;
  --z-normal: 1;
  --z-tooltips: 10;
  --z-fixed: 100;
  --text-size-base: 1rem;
  --text-scale-ratio: 1.25;
  --text-md: calc(var(--text-size-base) * var(--text-scale-ratio));
  --text-lg: calc(var(--text-md) * var(--text-scale-ratio));
  --text-xl: calc(var(--text-lg) * var(--text-scale-ratio));
  --text-xxl: calc(var(--text-xl) * var(--text-scale-ratio));
  --text-xxxl: calc(var(--text-xxl) * var(--text-scale-ratio));
  --text-xxxxl: calc(var(--text-xxxl) * var(--text-scale-ratio));
  --text-sm: calc(var(--text-size-base) / var(--text-scale-ratio));
  --text-xs: calc(var(--text-sm) / var(--text-scale-ratio));
  --space-unit: 1em;
  --space-xxxxs: calc(0.125 * var(--space-unit));
  --space-xxxs: calc(0.25 * var(--space-unit));
  --space-xxs: calc(0.375 * var(--space-unit));
  --space-xs: calc(0.5 * var(--space-unit));
  --space-sm: calc(0.75 * var(--space-unit));
  --space-md: calc(1.25 * var(--space-unit));
  --space-lg: calc(2 * var(--space-unit));
  --space-xl: calc(3.25 * var(--space-unit));
  --space-xxl: calc(5.25 * var(--space-unit));
  --space-xxxl: calc(8.5 * var(--space-unit));
  --space-xxxxl: calc(13.75 * var(--space-unit));
  --max-width-xxxxs: 20rem;
  --max-width-xxxs: 26rem;
  --max-width-xxs: 32rem;
  --max-width-xs: 38rem;
  --max-width-sm: 48rem;
  --max-width-md: 64rem;
  --max-width-lg: 75rem;
  --max-width-xl: 90rem;
  --max-width-xxl: 100rem;
  --max-width-xxxl: 120rem;
  --max-width-xxxxl: 150rem;
  --max-width-content: 980px;
  --padding-component: var(--space-md);
}

@media (min-width: 64rem) {
  :root {
    --text-size-base: 1.125rem;
  }
}
/* stylelint-disable max-nesting-depth */
/* stylelint-enable max-nesting-depth */
@media (min-width: 64rem) {
  .wpcotestheme-align-wide .alignwide {
    max-width: 1100px;
    margin-left: auto;
    margin-right: auto;
  }

  .wpcotestheme-align-wide .alignfull {
    max-width: none;
    margin: 0;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/