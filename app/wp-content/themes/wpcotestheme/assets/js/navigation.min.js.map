{"version":3,"file":"js/navigation.min.js","mappings":"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","sources":["webpack:///./js/navigation.js"],"sourcesContent":["/* global wpcotesthemeScreenReaderText */\r\n\r\n/**\r\n * navigation.js\r\n *\r\n * Handles toggling the navigation menu for small screens.\r\n * Also adds a focus class to parent li's for accessibility.\r\n */\r\n(function () {\r\n  // eslint-disable-next-line @wordpress/no-global-event-listener\r\n  document.addEventListener('DOMContentLoaded', function () {\r\n    const container = document.getElementById('site-navigation');\r\n    if (!container) {\r\n      return;\r\n    }\r\n\r\n    const button = container.querySelector('button');\r\n\r\n    if (!button) {\r\n      return;\r\n    }\r\n\r\n    const menu = container.querySelector('ul');\r\n\r\n    // Hide menu toggle button if menu is empty and return early.\r\n    if (!menu) {\r\n      button.style.display = 'none';\r\n      return;\r\n    }\r\n\r\n    button.setAttribute('aria-expanded', 'false');\r\n    menu.setAttribute('aria-expanded', 'false');\r\n    menu.classList.add('nav-menu');\r\n\r\n    button.addEventListener('click', function () {\r\n      container.classList.toggle('toggled');\r\n      const expanded = container.classList.contains('toggled')\r\n        ? 'true'\r\n        : 'false';\r\n      button.setAttribute('aria-expanded', expanded);\r\n      menu.setAttribute('aria-expanded', expanded);\r\n    });\r\n\r\n    // Add dropdown toggle that displays child menu items.\r\n    const handheld = document.getElementsByClassName('handheld-navigation');\r\n\r\n    if (handheld.length > 0) {\r\n      [].forEach.call(\r\n        handheld[0].querySelectorAll(\r\n          '.menu-item-has-children > a, .page_item_has_children > a',\r\n        ),\r\n        function (anchor) {\r\n          // Add dropdown toggle that displays child menu items\r\n          const btn = document.createElement('button');\r\n          btn.setAttribute('aria-expanded', 'false');\r\n          btn.classList.add('dropdown-toggle');\r\n\r\n          const btnSpan = document.createElement('span');\r\n          btnSpan.classList.add('screen-reader-text');\r\n          btnSpan.appendChild(\r\n            document.createTextNode(wpcotesthemeScreenReaderText.expand),\r\n          );\r\n\r\n          btn.appendChild(btnSpan);\r\n\r\n          anchor.parentNode.insertBefore(btn, anchor.nextSibling);\r\n\r\n          // Set the active submenu dropdown toggle button initial state\r\n          if (anchor.parentNode.classList.contains('current-menu-ancestor')) {\r\n            btn.setAttribute('aria-expanded', 'true');\r\n            btn.classList.add('toggled-on');\r\n            btn.nextElementSibling.classList.add('toggled-on');\r\n          }\r\n\r\n          // Add event listener\r\n          btn.addEventListener('click', function () {\r\n            btn.classList.toggle('toggled-on');\r\n\r\n            // Remove text inside span\r\n            while (btnSpan.firstChild) {\r\n              btnSpan.removeChild(btnSpan.firstChild);\r\n            }\r\n\r\n            const expanded = btn.classList.contains('toggled-on');\r\n\r\n            btn.setAttribute('aria-expanded', expanded);\r\n            btnSpan.appendChild(\r\n              document.createTextNode(\r\n                expanded\r\n                  ? wpcotesthemeScreenReaderText.collapse\r\n                  : wpcotesthemeScreenReaderText.expand,\r\n              ),\r\n            );\r\n            btn.nextElementSibling.classList.toggle('toggled-on');\r\n          });\r\n        },\r\n      );\r\n    }\r\n\r\n    // Add focus class to parents of sub-menu anchors.\r\n    [].forEach.call(\r\n      document.querySelectorAll(\r\n        '.site-header .menu-item > a, .site-header .page_item > a, .site-header-cart a',\r\n      ),\r\n      function (anchor) {\r\n        anchor.addEventListener('focus', function () {\r\n          // Remove focus class from other sub-menus previously open.\r\n          const elems = document.querySelectorAll('.focus');\r\n\r\n          [].forEach.call(elems, function (el) {\r\n            if (!el.contains(anchor)) {\r\n              el.classList.remove('focus');\r\n\r\n              // Remove blocked class, if it exists.\r\n              if (el.firstChild && el.firstChild.classList) {\r\n                el.firstChild.classList.remove('blocked');\r\n              }\r\n            }\r\n          });\r\n\r\n          // Add focus class.\r\n          const li = anchor.parentNode;\r\n\r\n          li.classList.add('focus');\r\n        });\r\n      },\r\n    );\r\n\r\n    // Ensure the dropdowns close when user taps outside the site header\r\n    [].forEach.call(\r\n      document.querySelectorAll('body #page > :not( .site-header )'),\r\n      function (element) {\r\n        element.addEventListener('click', function () {\r\n          [].forEach.call(\r\n            document.querySelectorAll('.focus, .blocked'),\r\n            function (el) {\r\n              el.classList.remove('focus');\r\n              el.classList.remove('blocked');\r\n            },\r\n          );\r\n        });\r\n      },\r\n    );\r\n\r\n    // Add an identifying class to dropdowns when on a touch device\r\n    // This is required to switch the dropdown hiding method from a negative `left` value to `display: none`.\r\n    if (\r\n      ('ontouchstart' in window || window.navigator.maxTouchPoints) &&\r\n      window.innerWidth > 767\r\n    ) {\r\n      [].forEach.call(\r\n        document.querySelectorAll(\r\n          '.site-header ul ul, .site-header-cart .widget_shopping_cart',\r\n        ),\r\n        function (element) {\r\n          element.classList.add('sub-menu--is-touch-device');\r\n        },\r\n      );\r\n\r\n      // Add blocked class to links that open sub-menus, and prevent from navigating away on first touch.\r\n      let acceptClick = false;\r\n\r\n      [].forEach.call(\r\n        document.querySelectorAll(\r\n          '.site-header .menu-item > a, .site-header .page_item > a, .site-header-cart a',\r\n        ),\r\n        function (anchor) {\r\n          anchor.addEventListener('click', function (event) {\r\n            if (anchor.classList.contains('blocked') && acceptClick === false) {\r\n              event.preventDefault();\r\n            }\r\n\r\n            acceptClick = false;\r\n          });\r\n\r\n          anchor.addEventListener('pointerup', function (event) {\r\n            if (\r\n              anchor.classList.contains('blocked') ||\r\n              event.pointerType === 'mouse'\r\n            ) {\r\n              acceptClick = true;\r\n            } else if (\r\n              (anchor.className === 'cart-contents' &&\r\n                anchor.parentNode.nextElementSibling &&\r\n                anchor.parentNode.nextElementSibling.textContent.trim() !==\r\n                  '') ||\r\n              anchor.nextElementSibling\r\n            ) {\r\n              anchor.classList.add('blocked');\r\n            } else {\r\n              acceptClick = true;\r\n            }\r\n          });\r\n        },\r\n      );\r\n    }\r\n  });\r\n})();\r\n"],"names":["document","addEventListener","container","getElementById","button","querySelector","menu","setAttribute","classList","add","toggle","expanded","contains","handheld","getElementsByClassName","length","forEach","call","querySelectorAll","anchor","btn","createElement","btnSpan","appendChild","createTextNode","wpcotesthemeScreenReaderText","expand","parentNode","insertBefore","nextSibling","nextElementSibling","firstChild","removeChild","collapse","elems","el","remove","element","window","navigator","maxTouchPoints","innerWidth","acceptClick","event","preventDefault","pointerType","className","textContent","trim","style","display"],"sourceRoot":""}